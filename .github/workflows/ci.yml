name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (LTS 20.x)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          check-latest: true
          # Do not enable pnpm cache here; pnpm not yet installed

      - name: Enable corepack and prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.5 --activate
          pnpm -v

      - name: Get pnpm store directory
        id: pnpm-cache-dir
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify Node.js and pnpm versions
        env:
          REQUIRED_NODE: '18.20.7'
          REQUIRED_PNPM: '9.15.5'
        run: node .github/scripts/check-versions.js

      - name: Lint & check (Biome)
        run: pnpm check

      - name: Format check
        run: pnpm format && git diff --exit-code || (echo "Run pnpm format locally" && exit 1)

      - name: Build
        run: pnpm -C packages/core build

      - name: Unit tests
        run: pnpm -C packages/core test:unit

      # Integration tests are opt-in (require Docker). Enable via workflow dispatch env if desired.
      # - name: Integration tests
      #   run: RUN_INTEGRATION_TESTS=true pnpm -C packages/core test:integration
